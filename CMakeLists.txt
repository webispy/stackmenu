CMAKE_MINIMUM_REQUIRED(VERSION 3.1)
PROJECT(stackmenu)

INCLUDE(GNUInstallDirs)
INCLUDE(FindPkgConfig)

SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -g -fPIC -fdata-sections -ffunction-sections -Wl,--gc-sections -O2")

SET(LIB_VERSION_MAJOR "1")
SET(LIB_VERSION_MINOR "0")
SET(LIB_VERSION_PATCH "0")

ADD_LIBRARY(stackmenu SHARED src/stackmenu.c)
SET_TARGET_PROPERTIES(stackmenu PROPERTIES
	VERSION ${LIB_VERSION_MAJOR}.${LIB_VERSION_MINOR}.${LIB_VERSION_PATCH}
	SOVERSION ${LIB_VERSION_MAJOR}
	OUTPUT_NAME stackmenu)
INSTALL(TARGETS stackmenu LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR})
INSTALL(FILES src/stackmenu.h DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/stackmenu)

CONFIGURE_FILE(stackmenu.pc.in ${CMAKE_BINARY_DIR}/stackmenu.pc @ONLY)
INSTALL(FILES ${CMAKE_BINARY_DIR}/stackmenu.pc DESTINATION ${CMAKE_INSTALL_LIBDIR}/pkgconfig/)

pkg_check_modules(GLIB2	glib-2.0)
IF(${GLIB2_FOUND})
	ADD_LIBRARY(stackmenu-glib SHARED src/stackmenu.c)
	FOREACH(flag ${GLIB2_CFLAGS})
		TARGET_COMPILE_OPTIONS(stackmenu-glib PRIVATE "${flag}")
	ENDFOREACH(flag)
	TARGET_COMPILE_DEFINITIONS(stackmenu-glib PRIVATE "-DBACKEND_GLIB")
	TARGET_LINK_LIBRARIES(stackmenu-glib ${GLIB2_LDFLAGS})
	INSTALL(TARGETS stackmenu-glib LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR})
	SET_TARGET_PROPERTIES(stackmenu-glib PROPERTIES
		VERSION ${LIB_VERSION_MAJOR}.${LIB_VERSION_MINOR}.${LIB_VERSION_PATCH}
		SOVERSION ${LIB_VERSION_MAJOR}
		OUTPUT_NAME stackmenu-glib)
ENDIF(${GLIB2_FOUND})

ADD_SUBDIRECTORY(examples)
